// <auto-generated />
using System;
using CompanyProjectApp.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProjektAPBDs28016.Migrations
{
    [DbContext(typeof(CompanyProjectAppContext))]
    partial class ProjectDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyProjectApp.Entities.AppUserEntities.AppUser", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExp")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login")
                        .HasName("AppUser_pk");

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Login = "admin",
                            Password = "RCIeotM4kTMfWDu3bn72qgTswxobbFllt8sP1Mm5U1s=",
                            RefreshToken = "OrXQIUPI69QtD5KVgI7QrFQHnwfs+8Q9mECKsLKmn80=",
                            RefreshTokenExp = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "admin",
                            Salt = "fUYAuxqW54H8a69VlzikJg=="
                        },
                        new
                        {
                            Login = "worker1",
                            Password = "RCIeotM4kTMfWDu3bn72qgTswxobbFllt8sP1Mm5U1s=",
                            RefreshToken = "OrXQIUPI69QtD5KVgI7QrFQHnwfs+8Q9mECKsLKmn80=",
                            RefreshTokenExp = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "regular",
                            Salt = "fUYAuxqW54H8a69VlzikJg=="
                        },
                        new
                        {
                            Login = "worker2",
                            Password = "RCIeotM4kTMfWDu3bn72qgTswxobbFllt8sP1Mm5U1s=",
                            RefreshToken = "OrXQIUPI69QtD5KVgI7QrFQHnwfs+8Q9mECKsLKmn80=",
                            RefreshTokenExp = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "asda231dasda",
                            Salt = "fUYAuxqW54H8a69VlzikJg=="
                        });
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ClientManagementEntities.CompanyClient", b =>
                {
                    b.Property<int>("IdCompanyClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompanyClient"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("IdCompanyClient")
                        .HasName("CompanyClient_pk");

                    b.ToTable("CompanyClient", (string)null);

                    b.HasData(
                        new
                        {
                            IdCompanyClient = 1,
                            Address = "Koszykowa 13, Warszawa",
                            Email = "weloveit@weloveit.pl",
                            KrsNumber = "113021392",
                            PhoneNumber = 696784867
                        },
                        new
                        {
                            IdCompanyClient = 2,
                            Address = "Kwiatowa 10, Warszawa",
                            Email = "itforu@itforu.pl",
                            KrsNumber = "443051392",
                            PhoneNumber = 539981155
                        });
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ClientManagementEntities.PhysicalClient", b =>
                {
                    b.Property<int>("IdPhysicalClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhysicalClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPhysicalClient")
                        .HasName("PhysicalClient_pk");

                    b.ToTable("PhysicalClient", (string)null);

                    b.HasData(
                        new
                        {
                            IdPhysicalClient = 1,
                            Email = "jan@kowalski.pl",
                            IsDeleted = false,
                            Name = "Jan",
                            Pesel = "99292006932",
                            PhoneNumber = 778123432,
                            Surname = "Kowalski"
                        },
                        new
                        {
                            IdPhysicalClient = 2,
                            Email = "piotr@piotrkowski.pl",
                            IsDeleted = false,
                            Name = "Piotr",
                            Pesel = "65292076931",
                            PhoneNumber = 666999333,
                            Surname = "Piotrkowski"
                        });
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Agreement", b =>
                {
                    b.Property<int>("IdAgreement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgreement"));

                    b.Property<DateTime>("AgreementDateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AgreementDateTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CalculatedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<int>("ProductUpdatesToInYears")
                        .HasColumnType("int");

                    b.Property<string>("ProductVersionInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgreement")
                        .HasName("Agreement_pk");

                    b.HasIndex("IdProduct");

                    b.ToTable("Agreement", (string)null);

                    b.HasData(
                        new
                        {
                            IdAgreement = 1,
                            AgreementDateFrom = new DateTime(2024, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AgreementDateTo = new DateTime(2024, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CalculatedPrice = 3400m,
                            ClientType = "physical",
                            IdClient = 1,
                            IdProduct = 2,
                            IsSigned = false,
                            ProductUpdatesToInYears = 3,
                            ProductVersionInfo = "10.9"
                        },
                        new
                        {
                            IdAgreement = 2,
                            AgreementDateFrom = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AgreementDateTo = new DateTime(2023, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CalculatedPrice = 3400m,
                            ClientType = "physical",
                            IdClient = 2,
                            IdProduct = 2,
                            IsSigned = false,
                            ProductUpdatesToInYears = 3,
                            ProductVersionInfo = "10.9"
                        });
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDiscount")
                        .HasName("Discount_pk");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            IdDiscount = 1,
                            Amount = 10,
                            DateFrom = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2028, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "General discount"
                        },
                        new
                        {
                            IdDiscount = 2,
                            Amount = 15,
                            DateFrom = new DateTime(2020, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2030, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Birthday discount"
                        });
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<int>("IdAgreement")
                        .HasColumnType("int");

                    b.Property<decimal>("MoneyOwed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyPaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPayment")
                        .HasName("Payment_pk");

                    b.HasIndex("IdAgreement");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDiscount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VersionInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduct")
                        .HasName("Product_pk");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            Category = "Software",
                            Description = "Python IDE (Pycharm) by Jetbrains",
                            IdDiscount = 1,
                            Name = "Pycharm",
                            Price = 5000m,
                            VersionInfo = "1.2"
                        },
                        new
                        {
                            IdProduct = 2,
                            Category = "Software",
                            Description = "Java IDE (Intellij) by Jetbrains",
                            IdDiscount = 1,
                            Name = "Intellij",
                            Price = 2500m,
                            VersionInfo = "15.4"
                        },
                        new
                        {
                            IdProduct = 3,
                            Category = "Software",
                            Description = "C# IDE (Rider) by Jetbrains",
                            IdDiscount = 1,
                            Name = "Rider",
                            Price = 6500m,
                            VersionInfo = "10.9"
                        });
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.ProductDiscount", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdDiscount")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdDiscount")
                        .HasName("ProductDiscount_pk");

                    b.HasIndex("IdDiscount");

                    b.ToTable("Product_Discount", (string)null);
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Agreement", b =>
                {
                    b.HasOne("CompanyProjectApp.Entities.ProductEntities.Product", "Product")
                        .WithMany("Agreements")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Agreement_Product_fk");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Payment", b =>
                {
                    b.HasOne("CompanyProjectApp.Entities.ProductEntities.Agreement", "Agreement")
                        .WithMany("Payments")
                        .HasForeignKey("IdAgreement")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Payment_Agreement_fk");

                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.ProductDiscount", b =>
                {
                    b.HasOne("CompanyProjectApp.Entities.ProductEntities.Discount", "Discount")
                        .WithMany("ProductDiscounts")
                        .HasForeignKey("IdDiscount")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("ProductDiscount_Discount_fk");

                    b.HasOne("CompanyProjectApp.Entities.ProductEntities.Product", "Product")
                        .WithMany("ProductDiscounts")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("ProductDiscount_Product_fk");

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Agreement", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Discount", b =>
                {
                    b.Navigation("ProductDiscounts");
                });

            modelBuilder.Entity("CompanyProjectApp.Entities.ProductEntities.Product", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("ProductDiscounts");
                });
#pragma warning restore 612, 618
        }
    }
}
